02:05 < multi_io> MatthiasM: are you there?
02:09 < multi_io> MatthiasM: is there a problem with displaying a TWL UI in an AWTGLCanvas and thus run all the 
                  redraws from the canvas's paintGL() method?
02:10 < MatthiasM> I would say no :)
02:11 < multi_io> (i.e. call UI#update() from there)
02:11 < multi_io> ok\
02:14 <+lwjglbot> nightly: LWJGL #533 (SUCCESS) <http://www.newdawnsoftware.com/hudson/job/LWJGL/533/> || 
                  LWJGL-win32 #549 (SUCCESS) <http://www.newdawnsoftware.com/hudson/job/LWJGL-win32/549/>
02:15 < multi_io> if I were to create two AWTGLCanvas objects (in two different windows) and have them share theire 
                  GL contexts, and then draw a TWL GUI in each of them, would that lead to problems?
02:16 < MatthiasM> you can create as many GUI instances as you want
02:16 < MatthiasM> eg the theme editor uses 2 in one GL context :)
02:17 < multi_io> would they end up sharing things like TWL-internal textures automatically then?
02:18 < MatthiasM> no - this is controlled by Renderer instances and it's CacheContext objects
02:18 < multi_io> ah, ok
02:19 < multi_io> but I really want to have two separate X11 windows with a GUI in each of them
02:19 < multi_io> but that should be possible, right?
02:19 < MatthiasM> and?
02:19 < MatthiasM> yes
02:19 < multi_io> ok
02:20 < multi_io> thanks, I'll try this out

[.....]


01:01 < multi_io> looks like I can't use TWL with AWTGLCanvas because the latter doesn't create a Display and thus I 
                  get a "Mouse must be created" exception in the LWJGLRenderer constructor.
01:01 < multi_io> MatthiasM: ^^^
01:01 < NoobFukaire1> Mouse.create()?
01:02 -!- arielsan [~arielsan@r190-64-170-195.dialup.adsl.anteldata.net.uy] has quit [Quit: Leaving.]
01:02 < multi_io> fails with "Display must be created."
01:03 -!- rhk [~rhk@76.247.147.25] has joined #lwjgl
01:04 < appel> is matt around?
01:12 < multi_io> what I want is run TWL in an AWT canvas. The GL routines (and thus, the TWL calls) should be issued in the AWT event dispatch thread

Possible at all? :-\

CanvasGameContainer from the "Slick" library
(http://slick.cokeandcode.com/) may achieve something like what I want
-- investigate!

(svn co https://bob.newdawnsoftware.com/repos/slick/trunk/Slick /
src/org/newdawn/slick/CanvasGameContainer.java)


[.....]

16:14 < multi_io> I don't know if this is related, but I want to use TWL in an AWTGLCanvas or maybe in a normal Canvas with 
                  Display.setParent, but I want the TWL event handlers to be called in the AWT event dispatch thread
16:14 < multi_io> i.e. I don't want to have a separate rendering thread
16:14 < multi_io> (this is an AWT/Swing app, obviously)
16:16 < multi_io> using AWTGLCanvas directly doesn't work here because AWTGLCanvas doesn't create a Display and I get a "Mouse must be 
                  created" exception in the LWJGLRenderer constructor.
16:18 < multi_io> MatthiasM2: so AWTGLCanvas isn't really supported by TWL?
16:19 < kap1> Phiip be great if you can drop a patch of the needed change on the lwjgl forum
16:19 < kap1> i'm sure someone will review it and add it to lwjgl
16:37 -!- Dragonene [~d550261b@gateway/web/freenode/x-cwcbpbbdggsemguk] has quit [Ping timeout: 252 seconds]
16:43 < baedert> multi_io: did you use Display.setParent()?
16:44 < baedert> there's also the theme editor which is using a awt frame to be resizable and the code is online
16:45 < baedert> http://hg.l33tlabs.org/twlthemeeditor/file/a9bb266ffa29/src/de/matthiasmann/twlthemeeditor/Main.java#l112
16:53 < multi_io> baedert: Yes, I use Display.setParent()
16:53 < multi_io> (unless I use AWTGLCanvas)
16:53 < multi_io> thanks for the link
16:56 < MatthiasM2> multi_io: it is - you just can't use GUI.update() direct√∂y
17:21 -!- arielsan [~acoppes@r190-134-19-78.dialup.adsl.anteldata.net.uy] has joined #lwjgl
17:48 -!- tametick [~chatzilla@chello062178075009.26.11.vie.surfer.at] has quit [Quit: ChatZilla 0.9.86 [Firefox 3.6.3/20100401080539]]
18:06 < multi_io> MatthiasM2: ok, so I would directly call things like handleMouse(x,y,...), handleKey(...) from outside, passing e.g. 
                  mouse events into TWL?
18:06 < MatthiasM2> yes
18:08 < multi_io> cool
18:32 < MatthiasM2> multi_io: look at the Slick <-> TWL adapter for details
18:32 < MatthiasM2> maybe you could put your AWTGLCanvas adapter online too?
18:34 -!- tris2k [~chatzilla@190.213.141.173] has joined #lwjgl
18:36 -!- ruben01 [~ruben01@r190-135-200-63.dialup.adsl.anteldata.net.uy] has joined #lwjgl
18:49 < multi_io> sure

[...]

20:03 < multi_io> MatthiasM2: I would still need to Display.create(theAWTGLCanvas) though, right?
20:03 < MatthiasM2> huh?
20:03 < MatthiasM2> when you use AWTGLCanvas you don't use any of the Display/Mouse/Keyboard classes
20:04 < multi_io> right, thought so
20:04 < multi_io> but
20:04 < MatthiasM2> (except for the Keyboard constants - they are used by TWL)
20:04 < multi_io> the LWJGLRender c'tor needs Mouse.getCursorSize() or so
20:04 < multi_io> *LWJGLRenderer
20:04 < MatthiasM2> hmm
20:05 < MatthiasM2> yeah - but that shouldn't matter
20:06 < multi_io> ok
20:06 < multi_io> seems to work
20:08 < multi_io> no
20:08 < multi_io>  java.lang.IllegalStateException: Mouse must be created.
20:09 < multi_io> at org.lwjgl.input.Cursor.getMinCursorSize(Cursor.java:121)
20:09 < multi_io> ..and Mouse.create() wants a display, iirc
20:11 < MatthiasM2> multi_io: ok, try the latest version from mercurial repo
20:12 -!- ZeuPiark [~piark@AAubervilliers-155-1-23-217.w83-199.abo.wanadoo.fr] has quit [Remote host closed the connection]
20:23 -!- tris2k [~chatzilla@190.213.141.173] has quit [Quit: ChatZilla 0.9.86 [Firefox 3.6.3/20100401080539]]
20:24 < multi_io> MatthiasM2: thanks
20:24 < multi_io> I think Gui#setCursor is the other thing that uses Mouse
20:24 < multi_io> ?
20:25 < multi_io> so it just wouldn't be supported with AWTGLCanvas then?
20:27 < multi_io> and GUI#draw doesn't draw anything here for now, but that's probably some fault in my code (investigating)
20:28 -!- betel [~betel@c83-248-228-54.bredband.comhem.se] has joined #lwjgl
20:30 < MatthiasM2> multi_io: you can subclass LWJGLRenderer and implement your own cursor handling
20:37 < multi_io> ok





cases where TWL-internal mouse/keyboards event handlers expect a valid
current GL context:


- SimpleTest, combobox (in table cell) popup & close

Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
	at org.lwjgl.opengl.GL11.glDeleteLists(GL11.java:715)
	at de.matthiasmann.twl.renderer.lwjgl.LWJGLFontCache.destroy(LWJGLFontCache.java:77)
	at de.matthiasmann.twl.TextWidget.destroy(TextWidget.java:171)
	at de.matthiasmann.twl.Widget.destroy(Widget.java:1204)
	at de.matthiasmann.twl.Widget.destroy(Widget.java:1204)
	at de.matthiasmann.twl.Widget.unparentChild(Widget.java:2044)
	at de.matthiasmann.twl.Widget.removeChild(Widget.java:1159)
	at de.matthiasmann.twl.GUI.closePopup(GUI.java:842)
	at de.matthiasmann.twl.PopupWindow.closePopup(PopupWindow.java:163)
	at de.matthiasmann.twl.ComboBox.listBoxSelectionChanged(ComboBox.java:172)
	at de.matthiasmann.twl.ComboBox$2.callback(ComboBox.java:77)
	at de.matthiasmann.twl.ComboBox$2.callback(ComboBox.java:1)
	at de.matthiasmann.twl.utils.CallbackSupport.fireCallbacks(CallbackSupport.java:109)
	at de.matthiasmann.twl.ListBox.doCallback(ListBox.java:131)
	at de.matthiasmann.twl.ListBox.setSelected(ListBox.java:236)
	at de.matthiasmann.twl.ListBox$1.callback(ListBox.java:523)
	at de.matthiasmann.twl.ListBox$1.callback(ListBox.java:1)
	at de.matthiasmann.twl.utils.CallbackSupport.fireCallbacks(CallbackSupport.java:109)
	at de.matthiasmann.twl.ListBox$ListBoxLabel.doListBoxCallback(ListBox.java:616)
	at de.matthiasmann.twl.ComboBox$ComboboxListboxLabel.handleListBoxEvent(ComboBox.java:322)
	at de.matthiasmann.twl.ListBox$ListBoxLabel.handleEvent(ListBox.java:639)
	at de.matthiasmann.twl.GUI.sendMouseEvent(GUI.java:785)
	at de.matthiasmann.twl.GUI.handleMouse(GUI.java:615)
	at de.olafklischat.volkit.App$MainFrameCanvas.processAnyMouseEvent(App.java:188)
	at de.olafklischat.volkit.App$MainFrameCanvas.processMouseEvent(App.java:158)
	at java.awt.Component.processEvent(Component.java:6028)
	at java.awt.Component.dispatchEventImpl(Component.java:4630)
	at java.awt.Component.dispatchEvent(Component.java:4460)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:599)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)


22:28 < multi_io_> in there a slider widget in TWL similar to JSlider? I.e. with a draggable "thumb" thingy?
22:28 < multi_io_> MatthiasM2: ^^
22:31 < multi_io_> these ValueAdjuster things look different

23:22 < MatthiasM2> multi_io_: use a ScrollBar
23:30 < MatthiasM2> multi_io_: you can hide the arrow button of the scrollbar by assign them an empty theme without any images and 
                    size (eg "-defaults")
23:31 < multi_io_> MatthiasM2: ok thanks
23:32 < MatthiasM2> remember that in TWL the widgets define the behavior and not the look :)
23:33 < multi_io_> hm
23:34 < multi_io_> so ValueAdjusterFloat doesn't contain the buttons that make up its UI?
23:41 < MatthiasM2> well - it does - but how it will look - eg take a look at the theme editor - it has a totally different look 
                    compared to the one in the examples
23:42 < MatthiasM2> but for a ScrollBar, if you hide the arrow buttons you get a track and a thumb (see theme editor scrollbars)
23:43 < MatthiasM2> now if you use a background image for the scrollbar which shows a track like JSlider does, and make the thumb 
                    look like the one from JSlider ...
